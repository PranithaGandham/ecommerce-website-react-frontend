{"ast":null,"code":"import React,{useState,useEffect}from\"react\";/* REACT ROUTER */import{Link}from\"react-router-dom\";/* REACT BOOTSTRAP */import{Button,Form}from\"react-bootstrap\";/* COMPONENTS */import Message from\"../components/Message\";import Loader from\"../components/Loader\";import FormContainer from\"../components/FormContainer\";/* REACT - REDUX */import{useDispatch,useSelector}from\"react-redux\";/* ACTION CREATORS */import{getUserDetails,updateUser}from\"../actions/userActions\";/* ACTION TYPES */import{USER_UPDATE_RESET}from\"../constants/userConstants\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserEditScreen(_ref){let{match,history}=_ref;/* GETTING USER ID FROM URL */const userId=match.params.id;/* STATE */const[name,setName]=useState(\"\");const[email,setEmail]=useState(\"\");const[isAdmin,setIsAdmin]=useState(false);const dispatch=useDispatch();/* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */const userDetails=useSelector(state=>state.userDetails);const{user,loading,error}=userDetails;const userUpdate=useSelector(state=>state.userUpdate);const{error:errorUpdate,loading:loadingUpdate,success:successUpdate}=userUpdate;useEffect(()=>{/* IF USER SUCCESSFULLY UPDATED, RESET USER DETAILS & REDIRECT USER TO ADMIN PAGE */if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push(\"/admin/userlist\");}else{/* IF WE DON'T HAVE A USER, OR IF WE HAVE DATA LOADED IN BUT WE ARE EDITING SOME OTHER USER THEN WE DISPATCH AND GET DATA OF THAT USER */if(!user.name||user._id!==Number(userId)){dispatch(getUserDetails(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,user,userId,history,successUpdate]);/* HANDLERS */const submitHandler=e=>{e.preventDefault();dispatch(updateUser({_id:user._id,name,email,isAdmin}));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",children:\"Go Back\"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter Name\",value:name,onChange:e=>setName(e.target.value)})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isAdmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",checked:isAdmin,onChange:e=>setIsAdmin(e.target.checked)})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"mt-3\",children:\"Update\"})]})]})]});}export default UserEditScreen;","map":{"version":3,"names":["React","useState","useEffect","Link","Button","Form","Message","Loader","FormContainer","useDispatch","useSelector","getUserDetails","updateUser","USER_UPDATE_RESET","jsx","_jsx","jsxs","_jsxs","UserEditScreen","_ref","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userDetails","state","user","loading","error","userUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","_id","Number","submitHandler","e","preventDefault","children","to","variant","onSubmit","Group","controlId","Label","Control","placeholder","value","onChange","target","Check","label","checked","className"],"sources":["C:/Users/Pranitha/OneDrive/Desktop/VV/ecommerce-django-react/frontend/src/screens/UserEditScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n/* REACT ROUTER */\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* REACT BOOTSTRAP */\r\nimport { Button, Form } from \"react-bootstrap\";\r\n\r\n/* COMPONENTS */\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport FormContainer from \"../components/FormContainer\";\r\n\r\n/* REACT - REDUX */\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n/* ACTION CREATORS */\r\nimport { getUserDetails, updateUser } from \"../actions/userActions\";\r\n\r\n/* ACTION TYPES */\r\nimport { USER_UPDATE_RESET } from \"../constants/userConstants\";\r\n\r\nfunction UserEditScreen({ match, history }) {\r\n  /* GETTING USER ID FROM URL */\r\n  const userId = match.params.id;\r\n\r\n  /* STATE */\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { user, loading, error } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    /* IF USER SUCCESSFULLY UPDATED, RESET USER DETAILS & REDIRECT USER TO ADMIN PAGE */\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push(\"/admin/userlist\");\r\n    } else {\r\n      /* IF WE DON'T HAVE A USER, OR IF WE HAVE DATA LOADED IN BUT WE ARE EDITING SOME OTHER USER THEN WE DISPATCH AND GET DATA OF THAT USER */\r\n      if (!user.name || user._id !== Number(userId)) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setIsAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, user, userId, history, successUpdate]);\r\n\r\n  /* HANDLERS */\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(updateUser({ _id: user._id, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/admin/userlist\">Go Back</Link>\r\n\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId=\"name\">\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"name\"\r\n                placeholder=\"Enter Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"email\">\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"isAdmin\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Is Admin\"\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserEditScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}