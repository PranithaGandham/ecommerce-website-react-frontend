{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import{resetPassword}from'../actions/userActions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordResetScreen=()=>{const[newPassword,setNewPassword]=useState('');const[confirmPassword,setConfirmPassword]=useState('');const[message,setMessage]=useState('');const[error,setError]=useState('');const{uidb64,token}=useParams();useEffect(()=>{console.log('PasswordResetScreen mounted');console.log('uidb64:',uidb64);console.log('token:',token);},[uidb64,token]);const handleSubmit=async e=>{e.preventDefault();setMessage('');setError('');if(newPassword!==confirmPassword){setError('Passwords do not match');return;}try{const response=await resetPassword(uidb64,token,newPassword);setMessage(response.message);}catch(err){var _err$response,_err$response$data;console.error('Password reset error:',err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.error)||'An error occurred. Please try again.');}};if(!uidb64||!token){return/*#__PURE__*/_jsx(\"div\",{children:\"Error: Missing reset parameters\"});}return/*#__PURE__*/_jsxs(\"div\",{style:{maxWidth:'400px',margin:'40px auto',padding:'20px',boxShadow:'0 0 10px rgba(0,0,0,0.1)'},children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginBottom:'20px'},children:\"Reset Password\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"newPassword\",style:{display:'block',marginBottom:'5px'},children:\"New Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"newPassword\",value:newPassword,onChange:e=>setNewPassword(e.target.value),required:true,style:{width:'100%',padding:'8px'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",style:{display:'block',marginBottom:'5px'},children:\"Confirm Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",value:confirmPassword,onChange:e=>setConfirmPassword(e.target.value),required:true,style:{width:'100%',padding:'8px'}})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{width:'100%',padding:'10px',backgroundColor:'#007bff',color:'white',border:'none',cursor:'pointer'},children:\"Reset Password\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'15px',padding:'10px',backgroundColor:'#d4edda',color:'#155724',borderRadius:'4px'},children:message}),error&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'15px',padding:'10px',backgroundColor:'#f8d7da',color:'#721c24',borderRadius:'4px'},children:error})]});};export default PasswordResetScreen;","map":{"version":3,"names":["React","useState","useEffect","useParams","resetPassword","jsx","_jsx","jsxs","_jsxs","PasswordResetScreen","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","uidb64","token","console","log","handleSubmit","e","preventDefault","response","err","_err$response","_err$response$data","data","children","style","maxWidth","margin","padding","boxShadow","marginBottom","onSubmit","htmlFor","display","type","id","value","onChange","target","required","width","backgroundColor","color","border","cursor","marginTop","borderRadius"],"sources":["C:/Users/Pranitha/OneDrive/Desktop/VV/ecommerce-django-react/frontend/src/screens/PasswordResetScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { resetPassword } from '../actions/userActions';\r\n\r\nconst PasswordResetScreen = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { uidb64, token } = useParams();\r\n\r\n  useEffect(() => {\r\n    console.log('PasswordResetScreen mounted');\r\n    console.log('uidb64:', uidb64);\r\n    console.log('token:', token);\r\n  }, [uidb64, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setError('');\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await resetPassword(uidb64, token, newPassword);\r\n      setMessage(response.message);\r\n    } catch (err) {\r\n      console.error('Password reset error:', err);\r\n      setError(err.response?.data?.error || 'An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (!uidb64 || !token) {\r\n    return <div>Error: Missing reset parameters</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '40px auto', padding: '20px', boxShadow: '0 0 10px rgba(0,0,0,0.1)' }}>\r\n      <h2 style={{ marginBottom: '20px' }}>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <label htmlFor=\"newPassword\" style={{ display: 'block', marginBottom: '5px' }}>New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n            style={{ width: '100%', padding: '8px' }}\r\n          />\r\n        </div>\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <label htmlFor=\"confirmPassword\" style={{ display: 'block', marginBottom: '5px' }}>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n            style={{ width: '100%', padding: '8px' }}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: 'white', border: 'none', cursor: 'pointer' }}>\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n      {message && (\r\n        <div style={{ marginTop: '15px', padding: '10px', backgroundColor: '#d4edda', color: '#155724', borderRadius: '4px' }}>\r\n          {message}\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div style={{ marginTop: '15px', padding: '10px', backgroundColor: '#f8d7da', color: '#721c24', borderRadius: '4px' }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordResetScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}