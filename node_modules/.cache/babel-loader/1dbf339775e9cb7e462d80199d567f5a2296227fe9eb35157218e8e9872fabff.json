{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pranitha\\\\OneDrive\\\\Desktop\\\\VV\\\\ecommerce-django-react\\\\frontend\\\\src\\\\screens\\\\PasswordResetScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { resetPassword } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordResetScreen = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const {\n    uidb64,\n    token\n  } = useParams();\n  useEffect(() => {\n    console.log('PasswordResetScreen mounted');\n    console.log('uidb64:', uidb64);\n    console.log('token:', token);\n  }, [uidb64, token]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMessage('');\n    setError('');\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await resetPassword(uidb64, token, newPassword);\n      setMessage(response.message);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Password reset error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'An error occurred. Please try again.');\n    }\n  };\n  if (!uidb64 || !token) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: Missing reset parameters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '400px',\n      margin: '40px auto',\n      padding: '20px',\n      boxShadow: '0 0 10px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true,\n          style: {\n            width: '100%',\n            padding: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true,\n          style: {\n            width: '100%',\n            padding: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px',\n        padding: '10px',\n        backgroundColor: '#d4edda',\n        color: '#155724',\n        borderRadius: '4px'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '15px',\n        padding: '10px',\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        borderRadius: '4px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordResetScreen, \"bbUJvFmS2sA6IoJBBYEkn211oLs=\", false, function () {\n  return [useParams];\n});\n_c = PasswordResetScreen;\nexport default PasswordResetScreen;\nvar _c;\n$RefreshReg$(_c, \"PasswordResetScreen\");","map":{"version":3,"names":["React","useState","useEffect","useParams","resetPassword","jsxDEV","_jsxDEV","PasswordResetScreen","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","uidb64","token","console","log","handleSubmit","e","preventDefault","response","err","_err$response","_err$response$data","data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","margin","padding","boxShadow","marginBottom","onSubmit","htmlFor","display","type","id","value","onChange","target","required","width","backgroundColor","color","border","cursor","marginTop","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/Pranitha/OneDrive/Desktop/VV/ecommerce-django-react/frontend/src/screens/PasswordResetScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { resetPassword } from '../actions/userActions';\r\n\r\nconst PasswordResetScreen = () => {\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const { uidb64, token } = useParams();\r\n\r\n  useEffect(() => {\r\n    console.log('PasswordResetScreen mounted');\r\n    console.log('uidb64:', uidb64);\r\n    console.log('token:', token);\r\n  }, [uidb64, token]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setMessage('');\r\n    setError('');\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await resetPassword(uidb64, token, newPassword);\r\n      setMessage(response.message);\r\n    } catch (err) {\r\n      console.error('Password reset error:', err);\r\n      setError(err.response?.data?.error || 'An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  if (!uidb64 || !token) {\r\n    return <div>Error: Missing reset parameters</div>;\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: '400px', margin: '40px auto', padding: '20px', boxShadow: '0 0 10px rgba(0,0,0,0.1)' }}>\r\n      <h2 style={{ marginBottom: '20px' }}>Reset Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <label htmlFor=\"newPassword\" style={{ display: 'block', marginBottom: '5px' }}>New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"newPassword\"\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n            required\r\n            style={{ width: '100%', padding: '8px' }}\r\n          />\r\n        </div>\r\n        <div style={{ marginBottom: '15px' }}>\r\n          <label htmlFor=\"confirmPassword\" style={{ display: 'block', marginBottom: '5px' }}>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirmPassword\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n            style={{ width: '100%', padding: '8px' }}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" style={{ width: '100%', padding: '10px', backgroundColor: '#007bff', color: 'white', border: 'none', cursor: 'pointer' }}>\r\n          Reset Password\r\n        </button>\r\n      </form>\r\n      {message && (\r\n        <div style={{ marginTop: '15px', padding: '10px', backgroundColor: '#d4edda', color: '#155724', borderRadius: '4px' }}>\r\n          {message}\r\n        </div>\r\n      )}\r\n      {error && (\r\n        <div style={{ marginTop: '15px', padding: '10px', backgroundColor: '#f8d7da', color: '#721c24', borderRadius: '4px' }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordResetScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}